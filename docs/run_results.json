{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.1", "generated_at": "2023-11-08T15:04:35.060136Z", "invocation_id": "2ce71ba4-c9bf-4b4e-99df-ce08a3b94281", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.923988Z", "completed_at": "2023-11-08T15:04:33.946868Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.948562Z", "completed_at": "2023-11-08T15:04:33.948569Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04410409927368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__account_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_account_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.940629Z", "completed_at": "2023-11-08T15:04:33.947178Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.948827Z", "completed_at": "2023-11-08T15:04:33.948831Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04420208930969238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__bank_transaction_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_bank_transaction_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__bank_transaction_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.943889Z", "completed_at": "2023-11-08T15:04:33.947475Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.949112Z", "completed_at": "2023-11-08T15:04:33.949115Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04401683807373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__contact_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_contact_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.956491Z", "completed_at": "2023-11-08T15:04:33.961073Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.961609Z", "completed_at": "2023-11-08T15:04:33.961615Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009783029556274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice_line_item_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_invoice_line_item_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_line_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.953698Z", "completed_at": "2023-11-08T15:04:33.962620Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.964492Z", "completed_at": "2023-11-08T15:04:33.964496Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015798091888427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__credit_note_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_credit_note_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__credit_note_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.958663Z", "completed_at": "2023-11-08T15:04:33.962968Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.964763Z", "completed_at": "2023-11-08T15:04:33.964766Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015575647354125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_invoice_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.965049Z", "completed_at": "2023-11-08T15:04:33.969231Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.970933Z", "completed_at": "2023-11-08T15:04:33.970941Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01387786865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal_line_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_journal_line_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_line_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.971287Z", "completed_at": "2023-11-08T15:04:33.978474Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.980908Z", "completed_at": "2023-11-08T15:04:33.980913Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012331962585449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_journal_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.974389Z", "completed_at": "2023-11-08T15:04:33.979264Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.982186Z", "completed_at": "2023-11-08T15:04:33.982190Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013323783874511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__organization_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"xero_integration_tests_1\".\"xero_organization_data\"", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__organization_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.979529Z", "completed_at": "2023-11-08T15:04:33.980602Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.982446Z", "completed_at": "2023-11-08T15:04:33.982449Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005633115768432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.985907Z", "completed_at": "2023-11-08T15:04:33.986974Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.990481Z", "completed_at": "2023-11-08T15:04:33.990486Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0074100494384765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_bank_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.987980Z", "completed_at": "2023-11-08T15:04:33.988944Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.991758Z", "completed_at": "2023-11-08T15:04:33.991761Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0075168609619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_contact_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.989279Z", "completed_at": "2023-11-08T15:04:33.990173Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:33.992018Z", "completed_at": "2023-11-08T15:04:33.992022Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007658958435058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_credit_note_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.995477Z", "completed_at": "2023-11-08T15:04:33.997112Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.000284Z", "completed_at": "2023-11-08T15:04:34.000289Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007619142532348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_invoice_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.998039Z", "completed_at": "2023-11-08T15:04:33.998904Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.001461Z", "completed_at": "2023-11-08T15:04:34.001465Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007668972015380859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_invoice_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:33.999182Z", "completed_at": "2023-11-08T15:04:34.000016Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.001721Z", "completed_at": "2023-11-08T15:04:34.001723Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007747173309326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_journal_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.004978Z", "completed_at": "2023-11-08T15:04:34.005886Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.014291Z", "completed_at": "2023-11-08T15:04:34.014298Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012012004852294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_journal_line_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.006868Z", "completed_at": "2023-11-08T15:04:34.007731Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.015507Z", "completed_at": "2023-11-08T15:04:34.015510Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012046098709106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.xero_integration_tests.xero_organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.007999Z", "completed_at": "2023-11-08T15:04:34.286799Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.287339Z", "completed_at": "2023-11-08T15:04:34.287346Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3238966464996338, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as TEXT) as \n    \n    bank_account_number\n    \n , \n    cast(null as TEXT) as \n    \n    bank_account_type\n    \n , \n    \n    \n    class\n    \n as \n    \n    class\n    \n, \n    \n    \n    code\n    \n as \n    \n    code\n    \n, \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    description\n    \n , \n    cast(null as boolean) as \n    \n    enable_payments_to_account\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    reporting_code\n    \n , \n    cast(null as TEXT) as \n    \n    reporting_code_name\n    \n , \n    cast(null as boolean) as \n    \n    show_in_expense_claims\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    system_account\n    \n , \n    cast(null as TEXT) as \n    \n    tax_type\n    \n , \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n \n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        name as account_name,\n        code as account_code,\n        type as account_type,\n        class as account_class,\n        _fivetran_synced\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from fields\n\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.018115Z", "completed_at": "2023-11-08T15:04:34.328934Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.330815Z", "completed_at": "2023-11-08T15:04:34.330820Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.37740421295166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__bank_transaction", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__bank_transaction_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    bank_account_id\n    \n , \n    \n    \n    bank_transaction_id\n    \n as \n    \n    bank_transaction_id\n    \n, \n    cast(null as TEXT) as \n    \n    batch_payment_batch_payment_id\n    \n , \n    cast(null as timestamp) as \n    \n    batch_payment_date\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payment_id\n    \n , \n    cast(null as boolean) as \n    \n    batch_payment_is_reconciled\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payment_status\n    \n , \n    cast(null as float) as \n    \n    batch_payment_total_amount\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payment_type\n    \n , \n    cast(null as timestamp) as \n    \n    batch_payment_updated_date_utc\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    currency_rate\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as TEXT) as \n    \n    external_link_provider_name\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    cast(null as boolean) as \n    \n    is_reconciled\n    \n , \n    cast(null as TEXT) as \n    \n    line_amount_types\n    \n , \n    cast(null as TEXT) as \n    \n    overpayment_id\n    \n , \n    cast(null as TEXT) as \n    \n    prepayment_id\n    \n , \n    cast(null as TEXT) as \n    \n    reference\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    sub_total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total_tax\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n , \n    cast(null as TEXT) as \n    \n    url\n    \n \n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        bank_transaction_id,\n        contact_id\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__bank_transaction\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.022396Z", "completed_at": "2023-11-08T15:04:34.329585Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.331330Z", "completed_at": "2023-11-08T15:04:34.331333Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.38225603103637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__contact", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    account_number\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_payable_tax_type\n    \n , \n    cast(null as TEXT) as \n    \n    accounts_receivable_tax_type\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_payable_outstanding\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_payable_overdue\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_receivable_outstanding\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    balances_accounts_receivable_overdue\n    \n , \n    cast(null as TEXT) as \n    \n    bank_account_details\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_bank_account_name\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_bank_account_number\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_code\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_details\n    \n , \n    cast(null as TEXT) as \n    \n    batch_payments_reference\n    \n , \n    cast(null as TEXT) as \n    \n    branding_theme_id\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    cast(null as TEXT) as \n    \n    contact_number\n    \n , \n    cast(null as TEXT) as \n    \n    contact_status\n    \n , \n    cast(null as TEXT) as \n    \n    default_currency\n    \n , \n    cast(null as integer) as \n    \n    discount\n    \n , \n    cast(null as TEXT) as \n    \n    email_address\n    \n , \n    cast(null as TEXT) as \n    \n    first_name\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    cast(null as boolean) as \n    \n    has_validation_errors\n    \n , \n    cast(null as boolean) as \n    \n    is_customer\n    \n , \n    cast(null as boolean) as \n    \n    is_supplier\n    \n , \n    cast(null as TEXT) as \n    \n    last_name\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    purchases_default_account_code\n    \n , \n    cast(null as TEXT) as \n    \n    sales_default_account_code\n    \n , \n    cast(null as TEXT) as \n    \n    skype_user_name\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n , \n    cast(null as TEXT) as \n    \n    website\n    \n , \n    cast(null as TEXT) as \n    \n    xero_network_key\n    \n \n\n\n\n        \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        contact_id,\n        name as contact_name\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n    where _fivetran_deleted = False\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.221963Z", "completed_at": "2023-11-08T15:04:34.507525Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.508048Z", "completed_at": "2023-11-08T15:04:34.508055Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.31285667419433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice_line_item", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_line_item_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_code\n    \n as \n    \n    account_code\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discount_entered_as_percent\n    \n as \n    \n    discount_entered_as_percent\n    \n, \n    \n    \n    discount_rate\n    \n as \n    \n    discount_rate\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    item_code\n    \n as \n    \n    item_code\n    \n, \n    \n    \n    line_amount\n    \n as \n    \n    line_amount\n    \n, \n    \n    \n    line_item_id\n    \n as \n    \n    line_item_id\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    tax_amount\n    \n as \n    \n    tax_amount\n    \n, \n    \n    \n    tax_type\n    \n as \n    \n    tax_type\n    \n, \n    \n    \n    unit_amount\n    \n as \n    \n    unit_amount\n    \n, \n    \n    \n    validation_errors\n    \n as \n    \n    validation_errors\n    \n\n\n\n\n        \n\n\n\n    \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        account_code,\n        description as line_item_description,\n        discount_entered_as_percent,\n        discount_rate,\n        invoice_id,\n        item_code,\n        line_amount,\n        line_item_id,\n        quantity,\n        tax_amount,\n        tax_type,\n        unit_amount\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_line_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.363876Z", "completed_at": "2023-11-08T15:04:34.639294Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.639834Z", "completed_at": "2023-11-08T15:04:34.639840Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.33763694763183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__credit_note", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__credit_note_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    applied_amount\n    \n , \n    cast(null as TEXT) as \n    \n    branding_theme_id\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    credit_note_id\n    \n as \n    \n    credit_note_id\n    \n, \n    cast(null as TEXT) as \n    \n    credit_note_number\n    \n , \n    cast(null as TEXT) as \n    \n    currency_code\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    currency_rate\n    \n , \n    cast(null as date) as \n    \n    date\n    \n , \n    cast(null as date) as \n    \n    due_date\n    \n , \n    cast(null as date) as \n    \n    fully_paid_on_date\n    \n , \n    cast(null as boolean) as \n    \n    has_attachments\n    \n , \n    cast(null as TEXT) as \n    \n    line_amount_types\n    \n , \n    cast(null as TEXT) as \n    \n    reference\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    remaining_credit\n    \n , \n    cast(null as boolean) as \n    \n    sent_to_contact\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    sub_total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    total_tax\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as timestamp) as \n    \n    updated_date_utc\n    \n \n\n\n\n        \n\n\n\n    \n    from base\n),\n\nfinal as (\n    \n    select \n        credit_note_id,\n        contact_id\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__credit_note\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.401808Z", "completed_at": "2023-11-08T15:04:34.694243Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.695125Z", "completed_at": "2023-11-08T15:04:34.695133Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3226301670074463, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal_line", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_line_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    account_code\n    \n as \n    \n    account_code\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    account_name\n    \n as \n    \n    account_name\n    \n, \n    \n    \n    account_type\n    \n as \n    \n    account_type\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    gross_amount\n    \n as \n    \n    gross_amount\n    \n, \n    \n    \n    journal_id\n    \n as \n    \n    journal_id\n    \n, \n    \n    \n    journal_line_id\n    \n as \n    \n    journal_line_id\n    \n, \n    \n    \n    net_amount\n    \n as \n    \n    net_amount\n    \n, \n    \n    \n    tax_amount\n    \n as \n    \n    tax_amount\n    \n, \n    \n    \n    tax_name\n    \n as \n    \n    tax_name\n    \n, \n    \n    \n    tax_type\n    \n as \n    \n    tax_type\n    \n\n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        journal_line_id,\n        account_code,\n        account_id,\n        account_name,\n        account_type,\n        description,\n        gross_amount,\n        journal_id,\n        net_amount,\n        tax_amount,\n        tax_name,\n        tax_type\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_line\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.395936Z", "completed_at": "2023-11-08T15:04:34.694853Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.695938Z", "completed_at": "2023-11-08T15:04:34.695941Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3296687602996826, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__invoice", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount_credited\n    \n as \n    \n    amount_credited\n    \n, \n    \n    \n    amount_due\n    \n as \n    \n    amount_due\n    \n, \n    \n    \n    amount_paid\n    \n as \n    \n    amount_paid\n    \n, \n    cast(null as TEXT) as \n    \n    branding_theme_id\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    cisdeduction\n    \n , \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    currency_code\n    \n as \n    \n    currency_code\n    \n, \n    \n    \n    currency_rate\n    \n as \n    \n    currency_rate\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    expected_payment_date\n    \n as \n    \n    expected_payment_date\n    \n, \n    \n    \n    fully_paid_on_date\n    \n as \n    \n    fully_paid_on_date\n    \n, \n    \n    \n    has_attachments\n    \n as \n    \n    has_attachments\n    \n, \n    \n    \n    has_errors\n    \n as \n    \n    has_errors\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    invoice_number\n    \n as \n    \n    invoice_number\n    \n, \n    \n    \n    is_discounted\n    \n as \n    \n    is_discounted\n    \n, \n    \n    \n    line_amount_types\n    \n as \n    \n    line_amount_types\n    \n, \n    \n    \n    planned_payment_date\n    \n as \n    \n    planned_payment_date\n    \n, \n    \n    \n    reference\n    \n as \n    \n    reference\n    \n, \n    \n    \n    sent_to_contact\n    \n as \n    \n    sent_to_contact\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    sub_total\n    \n as \n    \n    sub_total\n    \n, \n    \n    \n    total\n    \n as \n    \n    total\n    \n, \n    \n    \n    total_tax\n    \n as \n    \n    total_tax\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_date_utc\n    \n as \n    \n    updated_date_utc\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        -- IDs\n        invoice_id,\n        contact_id,\n\n        -- dates\n        date as invoice_date,\n        updated_date_utc as updated_date,\n        planned_payment_date,\n        due_date,\n        expected_payment_date,\n        fully_paid_on_date,\n        _fivetran_synced,\n\n        currency_code,\n        currency_rate,\n        invoice_number,\n        reference,\n        sent_to_contact as is_sent_to_contact,\n        status as invoice_status,\n        type,\n        url\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.726826Z", "completed_at": "2023-11-08T15:04:34.740730Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.742124Z", "completed_at": "2023-11-08T15:04:34.742131Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01759815216064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__account_account_id__source_relation.9ed50627c7", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account\"\n    group by account_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.735478Z", "completed_at": "2023-11-08T15:04:34.741090Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.742423Z", "completed_at": "2023-11-08T15:04:34.742427Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0170290470123291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__account_account_id.169f416c8c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.745636Z", "completed_at": "2023-11-08T15:04:34.752555Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.753158Z", "completed_at": "2023-11-08T15:04:34.753164Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009516239166259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__contact_contact_id__source_relation.f834e480d2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        contact_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact\"\n    group by contact_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.749755Z", "completed_at": "2023-11-08T15:04:34.753418Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.754831Z", "completed_at": "2023-11-08T15:04:34.754835Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010934829711914062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__contact_contact_id.39468b9d4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.756577Z", "completed_at": "2023-11-08T15:04:34.763307Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.763880Z", "completed_at": "2023-11-08T15:04:34.763885Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009271860122680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__invoice_line_item_line_item_id__source_relation.f4369d6f22", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        line_item_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_line_item\"\n    group by line_item_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.760608Z", "completed_at": "2023-11-08T15:04:34.764745Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.766231Z", "completed_at": "2023-11-08T15:04:34.766238Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0072019100189208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__invoice_line_item_line_item_id.cad18927c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_line_item\"\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.767451Z", "completed_at": "2023-11-08T15:04:34.772150Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.776358Z", "completed_at": "2023-11-08T15:04:34.776363Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011272907257080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__journal_line_journal_line_id__source_relation.4494dd5dc6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        journal_line_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_line\"\n    group by journal_line_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.773019Z", "completed_at": "2023-11-08T15:04:34.778191Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.782853Z", "completed_at": "2023-11-08T15:04:34.782859Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011911869049072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__journal_line_journal_line_id.0b7fe6d08c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect journal_line_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_line\"\nwhere journal_line_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.778918Z", "completed_at": "2023-11-08T15:04:34.784451Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.788419Z", "completed_at": "2023-11-08T15:04:34.788425Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01118612289428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__invoice_line_items", "compiled": true, "compiled_code": "with line_items as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice_line_item\"\n\n), invoices as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice\"\n\n), accounts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account\"\n\n), contacts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact\"\n\n), joined as (\n\n    select\n        line_items.*,\n\n        invoices.invoice_date,\n        invoices.updated_date,\n        invoices.planned_payment_date,\n        invoices.due_date,\n        invoices.expected_payment_date,\n        invoices.fully_paid_on_date,\n        invoices.currency_code,\n        invoices.currency_rate,\n        invoices.invoice_number,\n        invoices.is_sent_to_contact,\n        invoices.invoice_status,\n        invoices.type,\n        invoices.url,\n        invoices.reference as invoice_reference,\n\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_type,\n        accounts.account_class,\n\n        contacts.contact_name\n\n    from line_items\n    left join invoices\n        on (line_items.invoice_id = invoices.invoice_id\n        and line_items.source_relation = invoices.source_relation)\n    left join accounts\n        on (line_items.account_code = accounts.account_code\n        and line_items.source_relation = accounts.source_relation)\n    left join contacts\n        on (invoices.contact_id = contacts.contact_id\n        and invoices.source_relation = contacts.source_relation)\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"xero_integration_tests_1_xero\".\"xero__invoice_line_items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.785246Z", "completed_at": "2023-11-08T15:04:34.789938Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.793501Z", "completed_at": "2023-11-08T15:04:34.793506Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00990605354309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__invoice_invoice_id__source_relation.ff47f92f03", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice\"\n    group by invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.790730Z", "completed_at": "2023-11-08T15:04:34.797831Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.798388Z", "completed_at": "2023-11-08T15:04:34.798393Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00928497314453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__invoice_invoice_id.f66f79cb3e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice\"\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.795225Z", "completed_at": "2023-11-08T15:04:34.799864Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.804092Z", "completed_at": "2023-11-08T15:04:34.804097Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009976863861083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.dbt_utils_unique_combination_of_columns_xero__invoice_line_items_line_item_id__source_relation.6016aa2127", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        line_item_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_xero\".\"xero__invoice_line_items\"\n    group by line_item_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.800686Z", "completed_at": "2023-11-08T15:04:34.805078Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.805554Z", "completed_at": "2023-11-08T15:04:34.805557Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006459951400756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.not_null_xero__invoice_line_items_line_item_id.14b3aeaf21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect line_item_id\nfrom \"postgres\".\"xero_integration_tests_1_xero\".\"xero__invoice_line_items\"\nwhere line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.535386Z", "completed_at": "2023-11-08T15:04:34.812013Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.812526Z", "completed_at": "2023-11-08T15:04:34.812531Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.30549001693725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__journal", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    created_date_utc\n    \n as \n    \n    created_date_utc\n    \n, \n    \n    \n    journal_date\n    \n as \n    \n    journal_date\n    \n, \n    \n    \n    journal_id\n    \n as \n    \n    journal_id\n    \n, \n    \n    \n    journal_number\n    \n as \n    \n    journal_number\n    \n, \n    \n    \n    reference\n    \n as \n    \n    reference\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n\n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        journal_id,\n        created_date_utc,\n        journal_date,\n        journal_number,\n        reference,\n        source_id,\n        source_type\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.843073Z", "completed_at": "2023-11-08T15:04:34.856862Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.857550Z", "completed_at": "2023-11-08T15:04:34.857556Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01670098304748535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__general_ledger", "compiled": true, "compiled_code": "with journals as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal\"\n\n), journal_lines as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal_line\"\n\n), accounts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__account\"\n\n), invoices as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__invoice\"\n\n\n), bank_transactions as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__bank_transaction\"\n\n\n\n\n), credit_notes as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__credit_note\"\n\n\n), contacts as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__contact\"\n\n), joined as (\n\n    select \n        journals.journal_id,\n        journals.created_date_utc,\n        journals.journal_date,\n        journals.journal_number,\n        journals.reference,\n        journals.source_id,\n        journals.source_type,\n        journals.source_relation,\n        journal_lines.journal_line_id,\n        accounts.account_code,\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_type,\n        journal_lines.description,\n        journal_lines.gross_amount,\n        journal_lines.net_amount,\n        journal_lines.tax_amount,\n        journal_lines.tax_name,\n        journal_lines.tax_type,\n        accounts.account_class,\n\n        case when journals.source_type in ('ACCPAY', 'ACCREC') then journals.source_id end as invoice_id,\n        case when journals.source_type in ('CASHREC','CASHPAID') then journals.source_id end as bank_transaction_id,\n        case when journals.source_type in ('TRANSFER') then journals.source_id end as bank_transfer_id,\n        case when journals.source_type in ('MANJOURNAL') then journals.source_id end as manual_journal_id,\n        case when journals.source_type in ('APPREPAYMENT', 'APOVERPAYMENT', 'ACCPAYPAYMENT', 'ACCRECPAYMENT', 'ARCREDITPAYMENT', 'APCREDITPAYMENT') then journals.source_id end as payment_id,\n        case when journals.source_type in ('ACCPAYCREDIT','ACCRECCREDIT') then journals.source_id end as credit_note_id\n\n    from journals\n    left join journal_lines\n        on (journals.journal_id = journal_lines.journal_id\n        and journals.source_relation = journal_lines.source_relation)\n    left join accounts\n        on (accounts.account_id = journal_lines.account_id\n        and accounts.source_relation = journal_lines.source_relation)\n\n), first_contact as (\n\n    select \n        joined.*,\n        \n        coalesce(\n            invoices.contact_id\n            \n                , bank_transactions.contact_id\n            \n\n            \n            , credit_notes.contact_id\n            \n        )\n        \n\n        as contact_id\n    from joined\n    left join invoices \n        on (joined.invoice_id = invoices.invoice_id\n        and joined.source_relation = invoices.source_relation)\n    \n    left join bank_transactions\n        on (joined.bank_transaction_id = bank_transactions.bank_transaction_id\n        and joined.source_relation = bank_transactions.source_relation)\n    \n\n    \n    left join credit_notes \n        on (joined.credit_note_id = credit_notes.credit_note_id\n        and joined.source_relation = credit_notes.source_relation)\n    \n\n), second_contact as (\n\n    select \n        first_contact.*,\n        contacts.contact_name\n    from first_contact\n    left join contacts \n        on (first_contact.contact_id = contacts.contact_id\n        and first_contact.source_relation = contacts.source_relation)\n\n)\n\nselect *\nfrom second_contact", "relation_name": "\"postgres\".\"xero_integration_tests_1_xero\".\"xero__general_ledger\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.854224Z", "completed_at": "2023-11-08T15:04:34.858398Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.859761Z", "completed_at": "2023-11-08T15:04:34.859765Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01833796501159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__journal_journal_id.8ea46373ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect journal_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal\"\nwhere journal_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.851150Z", "completed_at": "2023-11-08T15:04:34.858745Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.860423Z", "completed_at": "2023-11-08T15:04:34.860427Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0195920467376709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__journal_journal_id__source_relation.491f5045a9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        journal_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__journal\"\n    group by journal_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.862153Z", "completed_at": "2023-11-08T15:04:34.880514Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.886453Z", "completed_at": "2023-11-08T15:04:34.886461Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026926040649414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__profit_and_loss_report", "compiled": true, "compiled_code": "with  __dbt__cte__xero__calendar_spine as (\nwith spine as (\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 59.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2019-01-01' as date) + ((interval '1 month') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_month\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_month <= \n\n    current_date + ((interval '1 month') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n\n), cleaned as (\n\n    select cast(date_month as date) as date_month\n    from spine\n\n)\n\nselect *\nfrom cleaned\n), calendar as (\n\n    select *\n    from __dbt__cte__xero__calendar_spine\n\n), ledger as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_xero\".\"xero__general_ledger\"\n\n), joined as (\n\n    select \n        md5(cast(coalesce(cast(calendar.date_month as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ledger.account_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ledger.source_relation as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as profit_and_loss_id,\n        calendar.date_month, \n        ledger.account_id,\n        ledger.account_name,\n        ledger.account_code,\n        ledger.account_type, \n        ledger.account_class, \n        ledger.source_relation, \n        coalesce(sum(ledger.net_amount * -1),0) as net_amount\n    from calendar\n    left join ledger\n        on calendar.date_month = cast(date_trunc('month', ledger.journal_date) as date)\n    where ledger.account_class in ('REVENUE','EXPENSE')\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"xero_integration_tests_1_xero\".\"xero__profit_and_loss_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.883655Z", "completed_at": "2023-11-08T15:04:34.887340Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.888712Z", "completed_at": "2023-11-08T15:04:34.888716Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010181188583374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.not_null_xero__general_ledger_journal_id.a6c44b2d7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect journal_id\nfrom \"postgres\".\"xero_integration_tests_1_xero\".\"xero__general_ledger\"\nwhere journal_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.880793Z", "completed_at": "2023-11-08T15:04:34.887645Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.889357Z", "completed_at": "2023-11-08T15:04:34.889360Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01146697998046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.dbt_utils_unique_combination_of_columns_xero__general_ledger_journal_line_id__source_relation__journal_id.87dc644945", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        journal_line_id, source_relation, journal_id\n    from \"postgres\".\"xero_integration_tests_1_xero\".\"xero__general_ledger\"\n    group by journal_line_id, source_relation, journal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.891173Z", "completed_at": "2023-11-08T15:04:34.898627Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.899329Z", "completed_at": "2023-11-08T15:04:34.899336Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01115107536315918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.not_null_xero__profit_and_loss_report_profit_and_loss_id.52946b603f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect profit_and_loss_id\nfrom \"postgres\".\"xero_integration_tests_1_xero\".\"xero__profit_and_loss_report\"\nwhere profit_and_loss_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.894612Z", "completed_at": "2023-11-08T15:04:34.899650Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.900813Z", "completed_at": "2023-11-08T15:04:34.900820Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0073130130767822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.unique_xero__profit_and_loss_report_profit_and_loss_id.b1d2106200", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    profit_and_loss_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"xero_integration_tests_1_xero\".\"xero__profit_and_loss_report\"\nwhere profit_and_loss_id is not null\ngroup by profit_and_loss_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:34.669387Z", "completed_at": "2023-11-08T15:04:34.991941Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:34.992481Z", "completed_at": "2023-11-08T15:04:34.992491Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3506460189819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero_source.stg_xero__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__organization_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    apikey\n    \n , \n    cast(null as TEXT) as \n    \n    base_currency\n    \n , \n    cast(null as TEXT) as \n    \n    class\n    \n , \n    cast(null as TEXT) as \n    \n    country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_date_utc\n    \n , \n    cast(null as TEXT) as \n    \n    default_purchases_tax\n    \n , \n    cast(null as TEXT) as \n    \n    default_sales_tax\n    \n , \n    cast(null as TEXT) as \n    \n    edition\n    \n , \n    cast(null as TEXT) as \n    \n    employer_identification_number\n    \n , \n    cast(null as date) as \n    \n    end_of_year_lock_date\n    \n , \n    \n    \n    financial_year_end_day\n    \n as \n    \n    financial_year_end_day\n    \n, \n    \n    \n    financial_year_end_month\n    \n as \n    \n    financial_year_end_month\n    \n, \n    cast(null as boolean) as \n    \n    is_demo_company\n    \n , \n    cast(null as TEXT) as \n    \n    legal_name\n    \n , \n    cast(null as TEXT) as \n    \n    line_of_business\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    organisation_entity_type\n    \n , \n    \n    \n    organisation_id\n    \n as \n    \n    organisation_id\n    \n, \n    cast(null as TEXT) as \n    \n    organisation_status\n    \n , \n    cast(null as TEXT) as \n    \n    organisation_type\n    \n , \n    cast(null as boolean) as \n    \n    pays_tax\n    \n , \n    cast(null as date) as \n    \n    period_lock_date\n    \n , \n    cast(null as TEXT) as \n    \n    registration_number\n    \n , \n    cast(null as TEXT) as \n    \n    sales_tax_basis\n    \n , \n    cast(null as TEXT) as \n    \n    sales_tax_period\n    \n , \n    cast(null as TEXT) as \n    \n    short_code\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number\n    \n , \n    cast(null as TEXT) as \n    \n    tax_number_name\n    \n , \n    cast(null as TEXT) as \n    \n    timezone\n    \n , \n    cast(null as TEXT) as \n    \n    version\n    \n \n\n\n\n        \n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        organisation_id,\n        financial_year_end_month,\n        financial_year_end_day\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__organization\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:35.022602Z", "completed_at": "2023-11-08T15:04:35.046098Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:35.047152Z", "completed_at": "2023-11-08T15:04:35.047159Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027626752853393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.dbt_utils_unique_combination_of_columns_stg_xero__organization_organisation_id__source_relation.07221d3685", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        organisation_id, source_relation\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__organization\"\n    group by organisation_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:35.026948Z", "completed_at": "2023-11-08T15:04:35.047483Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:35.049402Z", "completed_at": "2023-11-08T15:04:35.049410Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029077768325805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero_source.not_null_stg_xero__organization_organisation_id.a64306bad1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organisation_id\nfrom \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__organization\"\nwhere organisation_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:35.030177Z", "completed_at": "2023-11-08T15:04:35.048990Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:35.050686Z", "completed_at": "2023-11-08T15:04:35.050694Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02927684783935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.xero.xero__balance_sheet_report", "compiled": true, "compiled_code": "with  __dbt__cte__xero__calendar_spine as (\nwith spine as (\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 59.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2019-01-01' as date) + ((interval '1 month') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_month\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_month <= \n\n    current_date + ((interval '1 month') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n\n), cleaned as (\n\n    select cast(date_month as date) as date_month\n    from spine\n\n)\n\nselect *\nfrom cleaned\n), calendar as (\n\n    select *\n    from __dbt__cte__xero__calendar_spine\n\n), ledger as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_xero\".\"xero__general_ledger\"\n\n), organization as (\n\n    select *\n    from \"postgres\".\"xero_integration_tests_1_stg_xero\".\"stg_xero__organization\"\n\n), year_end as (\n\n    select \n        case\n            when cast(extract(year from current_date) || '-' || financial_year_end_month || '-' || financial_year_end_day as date) >= current_date\n            then cast(extract(year from current_date) || '-' || financial_year_end_month || '-' || financial_year_end_day as date)\n            else cast(extract(year from \n\n    current_date + ((interval '1 year') * (-1))\n\n) || '-' || financial_year_end_month || '-' || financial_year_end_day as date)\n        end as current_year_end_date,\n\t\tsource_relation\n    from organization\n\n), joined as (\n\n    select\n        calendar.date_month,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_name\n            when ledger.journal_date <= \n\n    year_end.current_year_end_date + ((interval '1 year') * (-1))\n\n then 'Retained Earnings'\n            else 'Current Year Earnings'\n        end as account_name,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_code\n            else null\n        end as account_code,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_id\n            else null\n        end as account_id,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_type\n            else null\n        end as account_type,\n        case\n            when ledger.account_class in ('ASSET','EQUITY','LIABILITY') then ledger.account_class\n            else 'EQUITY'\n        end as account_class,\n        ledger.source_relation, \n        sum(ledger.net_amount) as net_amount\n    from calendar\n    inner join ledger\n        on calendar.date_month >= cast(date_trunc('month', ledger.journal_date) as date)\n    cross join year_end\n\twhere year_end.source_relation = ledger.source_relation\n    group by 1,2,3,4,5,6,7\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"xero_integration_tests_1_xero\".\"xero__balance_sheet_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-08T15:04:35.052709Z", "completed_at": "2023-11-08T15:04:35.057159Z"}, {"name": "execute", "started_at": "2023-11-08T15:04:35.057780Z", "completed_at": "2023-11-08T15:04:35.057785Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006134986877441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.xero.dbt_utils_unique_combination_of_columns_xero__balance_sheet_report_source_relation__date_month__account_name.f52eafb1ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_month, account_name\n    from \"postgres\".\"xero_integration_tests_1_xero\".\"xero__balance_sheet_report\"\n    group by source_relation, date_month, account_name\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 2.1896488666534424, "args": {"exclude": [], "populate_cache": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "invocation_command": "dbt docs generate -t postgres", "printer_width": 80, "static_parser": true, "log_level": "info", "empty_catalog": false, "log_level_file": "debug", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/xero/dbt_xero/integration_tests", "log_format_file": "debug", "show_resource_report": false, "static": false, "use_colors_file": true, "vars": {}, "which": "generate", "target": "postgres", "cache_selected_only": false, "partial_parse_file_diff": true, "quiet": false, "log_file_max_bytes": 10485760, "version_check": true, "write_json": true, "introspect": true, "log_format": "default", "print": true, "use_colors": true, "indirect_selection": "eager", "defer": false, "select": [], "macro_debugging": false, "send_anonymous_usage_stats": true, "enable_legacy_logger": false, "compile": true, "strict_mode": false, "favor_state": false, "partial_parse": true, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/xero/dbt_xero/integration_tests/logs", "warn_error_options": {"include": [], "exclude": []}}}